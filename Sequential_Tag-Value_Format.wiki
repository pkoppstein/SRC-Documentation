==Sequential Tag-Value Format ==

This format is intended for capturing certain data that might appear in
the proceedings of a legislative body.

1. The order of lines in the file is important.

2. Each line takes the form:

Tag: value

3. If "Tag" is blank, it is understood to be "Member", where "Member" is the identifier as it appears in that particular rollcall (e.g. "Smith"), or as a disambiguation of that identifier used in a different rollcall (e.g. "Smith (43)").

4. For certain tags, the value must be blank.

5. The set of tags is predefined.  

6. Unless otherwise specified, the field names defined for the three standard .tsv files (see [[Schema%20for%20Additional%20Data|Schema for Additional Data]]) can be used.

===ROUGH EXAMPLE===

# This example is intended to be illustrative rather than precise.
# "#" indicates that the remainder of the line is a comment.

{{{
STATE: AL
CHAMBER: U
SESSION: reg
Roster:         # a section header
District: 1
: Jones, A.
District: 2
: Wiggins

Rollcall:        # a section header
date: 2009-01-07
question: Shall the bill pass?
bill: HR 2024
AYES: 3
Party: Republican
: Jones, A.
: Smith
Party: Democrat
: Wiggins

NAYS: 2
Party: Republican
: Jones, B.
Party: Democrat
: Jones, C.

PAIRED: 4 # number of individuals casting paired votes, not the number of pairs
PAIR:
AYE: present
: Patrick, P.
NAY: absent
: Quigley
PAIR:
AYE: absent
: Roberts
NAY: present
: Samuels

result: Passed
}}}

==Defined Tags==
{{{
: memberName       # either as given, or as disambiguated

ABSENT: count      # as given
AYES: count        # as given
CHAMBER:           # H | A | S | U | L
FILE: filename     # file being read
GIVEN DATE: text   # as given
Generated: YYYYMMDD  # date the program was run
Generator: filename version # name and version of program
NAYS: count        # as given
NOTE: text         # program-generated
REREADING: text    # sometimes it's necessary to lookahead, in which case the program may indicate the text it is re-reading
RESULT TEXT: text  # as given
Result: result     # 1 = Passed, 0 = Failed, ... 

Rollcall: [ignore] # start of new section; (question:, bill:, and rollcall_number:, etc., follow);
                   # specify "ignore" if it can be determined that this rollcall should be ignored.

SESSION: code      # reg | org | ss | ...
STATE: two-letters # standard code
WARNING: text      # program-generated
bill: text         # file number (as given) (*)
rollcall_number: n # the sequence number of this rollcall (counting from 1)
date:  YYYY-MM-DD  # date as interpreted (the subsequent Rollcall: blocks can reliably be associated with this date)
daycount: n        # the sequence number of this rollcall on the current day (counting from 1)
description: text  # text or URL associated with vote (*)
question: text     # parsed from proceedings (*)
Event:             # a section header
Add: D. Smith      # This implies that the previous Smith was not "D. Smith"
}}}

(*) For example:

<BR>On the question "Shall the bill pass?" (<A HREF="http://www.legis.state.ia.us/GA/78GA/Legislation/HF/02100/HF02145/Current.html">H.F. 2145</A>)

=>
{{{
question: Shall the bill pass?
bill: H.F. 2145
description: http://www.legis.state.ia.us/GA/78GA/Legislation/HF/02100/HF02145/Current.html
}}}